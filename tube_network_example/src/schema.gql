define

naptan-id sub attribute datatype string;
name sub attribute datatype string;
lat sub attribute datatype double;
lon sub attribute datatype double;
direction sub attribute datatype string;
identifier sub attribute datatype long;
duration sub attribute datatype long;
is-origin sub attribute datatype boolean;
is-termination sub attribute datatype boolean;
distance sub attribute datatype double;

zone sub entity,
    plays within,
    has name;

zoning sub relationship,
    relates within,
    relates contains-stop;

stop sub entity,
    plays goes-from,
    plays goes-to,
    plays originates-at,
    plays terminates-at,
    plays contains-stop,
    plays connected-stop,
    plays is-adjacent,
    has naptan-id
    has name,
    has lat,
    has lon;

route sub entity,
    plays operates,
    plays part-of,
    plays has-route,
    has identifier;

route-section sub relationship,
    relates part-of,
    relates goes-from,
    relates goes-to,
    has duration,
    has is-origin,
    has is-termination;

line sub entity,
    plays operated-by,
    plays via-line,
    has name;

operation sub relationship,
    relates operated-by,
    relates operates;

origination sub relationship,
    relates originates-at,
    relates has-route;

termination sub relationship,
    relates terminates-at,
    relates has-route;

find-origin sub rule,
    when {
        $s isa stop;
        $r isa route;
        $rs(goes-from: $s, part-of: $r) isa route-section, has is-origin true;
    } then {
        (originates-at: $s, has-route: $r) isa origination;
    };

find-termination sub rule,
    when {
        $s isa stop;
        $r isa route;
        $rs(goes-to: $s, part-of: $r) isa route-section, has is-termination true;
    } then {
        (terminates-at: $s, has-route: $r) isa termination;
    };

connection sub relationship,
    relates connected-stop,
    relates via-line;

connectedness sub rule,
    when {
        $s1 isa stop;
        $s2 isa stop;
        $r isa route;
        $rs($s1, $s2, $r) isa route-section;
        $l isa line;
        $o($l, $r) isa operation;
    } then {
        (connected-stop: $s1, connected-stop: $s2, via-line: $l) isa connection;
    };

adjacent sub relationship, # Change to neighbouring and neighbour
    relates is-adjacent,
    has distance;

adjacency sub rule,
    when {
        $s1 isa stop;
        $s2 isa stop;
        ($s1, $s2) isa route-section;
    } then {
        ($s1, $s2) isa adjacent;
    };
